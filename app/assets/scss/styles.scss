$shellSpeed: .5s; // change this to adjust the shell speed

/* GENERIC STYLES FOR THE PEN
-------------------------------------- */
html {
    width: 100%;
    height: 100%;
    //background: #222222;

    p,
    h1 {
        color: #fff;
    }

    .wrapper {
        padding: 15px;
    }
}

body {
    background: url("../images/carina.jpg");

    p {
        font-weight: 100;
    }
}

.btn {
    background: none;
    border: 1px solid #fff;
    font-weight: 100;
    border-radius: 2px;
    font-size: 2rem;

    &.more-info {
        position: absolute;
        top: 15px;
        right: 15px;
    }
}

.gutter-top {
    margin-top: 30px;
}

.table-controls {
    position: absolute;
    bottom: 15px;
    left: 0;
    right: 0;

    a {
        text-decoration: underline;
    }

    .lnr {
        color: #fff;
        font-size: 5rem;
        cursor: pointer;
    }

    .lnr-rocket {
        font-size: 2rem;
        vertical-align: middle;
        color: #777;
    }
}

.table-square {
    border: 4px solid #fff;
    border-radius: 2px;
    color: #fff;
    margin: 15px 0 0 15px;
    width: 130px;
    height: 130px;
    display: table;
    position: relative;

    div {
        display: table-cell;
        vertical-align: middle;


        .number {
            position: absolute;
            top: 5px;
            left: 5px;
        }

        strong {
            font-size: 3rem;
        }
    }
}

.gutter-top {
    margin-top: 15px;
}

/* BEGIN ATOM CSS
-------------------------------------- */
.atom {
    width: 200px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    .electron-shell {
        position: absolute;
        border-radius: 50%;
        transform-style: preserve-3d;

        &.show-path {
            border: 1px solid  #fff;
        }
    }

    .electron {
        left: 50%;
        top: 50%;
        border-radius: 50%;
        transform-style: preserve-3d;
        position: absolute;

        &:after {
            content: "";
            position: absolute;
            top: -3px;
            box-shadow: 0 0 15px #fff;
            left: 50%;
            margin-left: -3px;
            width: 7px;
            height: 7px;
            border-radius: 50%;
            background-color: #fff;
            animation: paricle_ 2s infinite linear;
        }
  }

    .nucleus {
        background: #fff;
        width: 10%;
        height: 10%;
        box-shadow: 0 0 15px #fff;
        border-radius: 50%;
        border: 1px solid #ccc;
        margin: 0 auto;
        position: relative;
        top: 50%;
        transform: translateY(-50%);
    }
}

.nucleus.animate {
    animation: electronStill $shellSpeed linear infinite;
    top: 45%;
}

.electron-shell.animate:nth-child(3n+1) {
    animation: shell3dRotateFirst $shellSpeed linear infinite;
}

.electron-shell.animate:first-child {
    animation: shell3dRotateFirst $shellSpeed*2 linear infinite;
}

.electron-shell.animate:nth-child(3n+2) {
    animation: shell3dRotateSecond $shellSpeed linear infinite;
}

.electron-shell.animate:nth-child(3n+3) {
    animation: shell3dRotateThird $shellSpeed linear infinite;
}

@keyframes electron {
    from {
        transform: rotateX(90deg) rotateY(0deg);
    } to {
        transform: rotateX(90deg) rotateY(-360deg);
    }
}

@keyframes electronStill {
    0% {
        transform: translate3d(0, 0, 0);
    }

    25% {
        transform: translate3d(-.5px, -.5px, 0);
    }

    75% {
        transform: translate3d(.5px, .5px, 0);
    }

    100% {
        transform: translate3d(0, 0, 0);
    }
}

@keyframes shell2dRotate {
    from {
        transform: rotate3d(0, 0, 0, 0deg);
    }
    to {
        transform: rotate3d(0, 0, 1, 1080deg);
    }
}

@keyframes shell3dRotateFirst {
    from {
        transform: rotate3d(0, 0, 0, 0deg);
    }
    to {
        transform: rotate3d(0, 1, 1, 360deg);
    }
}

@keyframes shell3dRotateSecond {
    from {
        transform: rotate3d(0, 0, 0, 0deg);
    }
    to {
        transform: rotate3d(0, -1, -1, 720deg);
    }
}

@keyframes shell3dRotateThird {
    from {
        transform: rotate3d(0, 0, 0, 0deg);
    }
    to {
        transform: rotate3d(0, 2, 2, 1080deg);
    }
}
